image: node:latest

cache:
  paths:
    - backend/node_modules
    - backend/.yarn
    - frontend-react/node_modules
    - frontend-react/.yarn
  policy: pull-push

stages:
  - build
  - test
  - push
  - deploy

install-backend:
  stage: build
  cache:
    key: backend
    paths:
      - backend/node_modules
      - backend/.yarn
    policy: pull-push
  script:
    - cd backend
    - yarn install --cache-folder .yarn
    - yarn run build
    - cp -R scripts dist
    - cp appspec.yml package.json yarn.lock dist
  artifacts:
    paths:
      - backend/dist
    expire_in: 1 hour

install-frontend:
  stage: build
  cache:
    key: frontend
    paths:
      - frontend-react/node_modules
      - frontend-react/.yarn
    policy: pull-push
  script:
    - cd frontend-react
    - yarn install --cache-folder .yarn
    - yarn run build
  artifacts:
    paths:
      - frontend-react/build
    expire_in: 1 hour

test-backend:
  stage: test
  before_script:
    - cd backend
    - yarn install --cache-folder .yarn --frozen-lockfile
  script:
    - cd backend
    - yarn add -D jest
    - yarn run test

test-frontend:
  image: cypress/base:14.15.0
  stage: test
  before_script:
    - yarn install --cache-folder .yarn --frozen-lockfile
  script:
    - yarn global add pm2
    - pm2 start --name backend backend/dist/server.js
    - cd frontend-react
    - yarn add -D start-server-and-test
    - yarn run test

revision-push:
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  stage: push
  script:
    - >
      aws deploy push
      --application-name MyHelsinkiServer
      --description "helsinki-places backend revision"
      --ignore-hidden-files
      --s3-location $S3_BACKEND_LOCATION/helsinki-places-server.zip
      --source backend/dist
    - aws s3 sync frontend-react/build $S3_FRONTEND_LOCATION  --size-only

backend-deploy:
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  stage: deploy
  script:
    - >
      aws deploy create-deployment
      --application-name MyHelsinkiServer
      --deployment-config-name CodeDeployDefault.OneAtATime
      --deployment-group-name MyHelsinkiDeploymentGroup
      --file-exists-behavior OVERWRITE
      --s3-location bucket=$S3_BACKEND_LOCATION,key=helsinki-places-server.zip,bundleType=zip
