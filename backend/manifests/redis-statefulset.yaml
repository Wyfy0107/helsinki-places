apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: projects
spec:
  serviceName: 'redis-svc'
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      initContainers:
        - name: init-redis
          image: redis:latest
          imagePullPolicy: ifNotPresent
          command:
            - bash
            - '-c'
            - |
              set -ex
              # Generate redis server-id from pod ordinal index.
              [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
              ordinal=${BASH_REMATCH[1]}
              # Copy appropriate redis config files from config-map to respective directories.
              if [[ $ordinal -eq 0 ]]; then
                cp /mnt/master.conf /etc/redis-config.conf
              else
                cp /mnt/slave.conf /etc/redis-config.conf
              fi
          volumeMounts:
            - name: redis-claim
              mountPath: /etc
            - name: config-map
              mountPath: /mnt/
      containers:
        - name: redis-server
          image: redis:latest
          imagePullPolicy: ifNotPresent
          ports:
            - containerPort: 6379
              name: redis
          command:
            - redis-server
            - '/etc/redis-config.conf'
          volumeMounts:
            - name: redis-data
              mountPath: /data
            - name: redis-claim
              mountPath: /etc
      volumes:
        - name: config-map
          configMap:
            name: redis-config
  volumeClaimTemplates:
    - metadata:
        name: redis-claim
      spec:
        accessModes: ['ReadWriteOnce']
        resources:
          requests:
            storage: 10M
    - metadata:
        name: redis-data
      spec:
        accessModes: ['ReadWriteOnce']
        resources:
          requests:
            storage: 10M
